clear all
close all
clc
tic 

% Example script mapping deletions in Slice 4 Naive, DSSH2A_S1_L001_R1_001.fastq. Additional files are as follows: 
    % Slice 4 Sorted, DSSH2D_S4_L001_R1_001.fastq 
    % Slice 5 Naive, DSSH2C_S3_L001_R1_001.fastq
    % Slice 5 Sorted, DSSH2B_S2_L001_R1_001.fastq

nearbyscar = 15 ; % Number of bases used to uniquely identify a deletion site
deletion_map = zeros(1369,1369) ; % Store identified deletions (Row is start site of deletion, Column is end site)
blocksread = 0 ; % Read data in blocks, specify starting point
blocksize = 100000 ; % Number of reads per block

for block = 1:133 
    blocksread = blocksread + 1 ;
    
    % Load fastq and set reads to variable 'reads'
    disp(['Currently loading block ' , num2str(block)])
    % Raw files must be in the current directory
    [headers,seqs,quals] = fastqread('DSSH2A_S1_L001_R1_001.fastq', 'blockread', [block*blocksize-blocksize+1 block*blocksize]) ; 
    toc
    reads = seqs ;
    clear headers
    clear quals
    clear seqs
    
    disp(['Done loading block ' , num2str(block)])
    reads = [reads'];
    
    % Cas9 reference sequence
    cas9            = 'AGAAATAATTTTGTTTAACTTTAATAAGGAGATAATCTATGGATAAGAAATACTCAATAGGCTTAGCTATCGGCACAAATAGCGTCGGATGGGCGGTGATCACTGATGAATATAAGGTTCCGTCTAAAAAGTTCAAGGTTCTGGGAAATACAGACCGCCACAGTATCAAAAAAAATCTTATAGGGGCTCTTTTATTTGACAGTGGAGAGACAGCGGAAGCGACTCGTCTAAAACGGACAGCTCGTAGAAGGTATACACGTCGGAAGAATCGTATTTGTTATCTACAGGAGATTTTTTCAAATGAGATGGCGAAAGTAGATGATAGTTTCTTTCATCGACTTGAAGAGTCTTTTTTGGTGGAAGAAGACAAGAAGCATGAACGTCATCCTATTTTTGGAAATATAGTAGATGAAGTTGCTTATCATGAGAAATATCCAACTATCTATCATCTGCGAAAAAAATTGGTAGATTCTACTGATAAAGCGGATTTGCGCTTAATCTATTTGGCCTTAGCGCATATGATTAAGTTTCGTGGTCATTTTTTGATTGAGGGAGATTTAAATCCTGATAATAGTGATGTGGACAAACTATTTATCCAGTTGGTACAAACCTACAATCAATTATTTGAAGAAAACCCTATTAACGCAAGTGGAGTAGATGCTAAAGCGATTCTTTCTGCACGATTGAGTAAATCAAGACGATTAGAAAATCTCATTGCTCAGCTCCCCGGTGAGAAGAAAAATGGCTTATTTGGGAATCTCATTGCTTTGTCATTGGGTTTGACCCCTAATTTTAAATCAAATTTTGATTTGGCAGAAGATGCTAAATTACAGCTTTCAAAAGATACTTACGATGATGATTTAGATAATTTATTGGCGCAAATTGGAGATCAATATGCTGATTTGTTTTTGGCAGCTAAGAATTTATCAGATGCTATTTTACTTTCAGATATCCTAAGAGTAAATACTGAAATAACTAAGGCTCCCCTATCAGCTTCAATGATTAAACGCTACGATGAACATCATCAAGACTTGACTCTTTTAAAAGCTTTAGTTCGACAACAACTTCCAGAAAAGTATAAAGAAATCTTTTTTGATCAATCAAAAAACGGATATGCAGGTTATATTGATGGGGGAGCgAGCCAAGAAGAATTTTATAAATTTATCAAACCAATTTTAGAAAAAATGGATGGTACTGAGGAATTATTGGTGAAACTAAATCGTGAAGATTTGCTGCGCAAGCAACGGACCTTTGACAACGGCTCTATTCCCCATCAAATTCACTTGGGTGAGCTGCATGCTATTTTGAGAAGACAAGAAGACTTTTATCCATTTTTAAAAGACAATCGTGAGAAGATTGAAAAAATCTTGACTTTTCGAATTCCTTATTATGTTGGTCCATTGGCGCGTGGCAATAGTCGTTTTGCATGGATGACTCGGAAGTCTGAAGAAACAATTACCCCATGGAATTTTGAAGAAGTTGTCGATAAAGGTGCTTCAGCTCAATCATTTATTGAACGCATGACAAACTTTGATAAAAATCTTCCAAATGAAAAAGTACTACCAAAACATAGTTTGCTTTATGAGTATTTTACGGTTTATAACGAATTGACAAAGGTCAAATATGTTACTGAAGGAATGCGAAAACCAGCATTTCTTTCAGGTGAACAGAAGAAAGCCATTGTTGATTTACTCTTCAAAACAAATCGAAAAGTAACCGTTAAGCAATTAAAAGAAGATTATTTCAAAAAAATAGAATGTTTTGATAGTGTTGAAATTTCAGGAGTTGAAGATAGATTTAATGCTTCATTAGGTACCTACCATGATTTGCTAAAAATTATTAAAGATAAAGATTTTTTGGATAATGAAGAAAATGAAGATATCTTAGAGGATATTGTTTTAACATTGACCTTATTTGAAGATAGGGAGATGATTGAGGAAAGACTTAAAACATATGCTCACCTCTTTGATGATAAGGTGATGAAACAGCTTAAACGTCGCCGTTATACTGGTTGGGGACGTTTGTCTCGAAAATTGATTAATGGTATTAGGGATAAGCAATCTGGCAAAACAATATTAGATTTTTTGAAATCAGATGGTTTTGCCAATCGCAATTTTATGCAGCTGATCCATGATGATAGTTTGACATTTAAAGAAGACATTCAAAAAGCACAAGTGTCTGGACAAGGCGATAGTTTACATGAACATATTGCAAATTTAGCTGGTAGCCCTGCTATTAAAAAAGGTATTTTACAGACTGTAAAAGTTGTTGATGAATTGGTCAAAGTAATGGGGCGGCATAAGCCAGAAAATATCGTTATTGAAATGGCACGTGAAAATCAGACAACTCAAAAGGGCCAGAAAAATTCGCGAGAGCGTATGAAACGAATCGAAGAAGGTATCAAAGAATTAGGAAGTCAGATTCTTAAAGAGCATCCTGTTGAAAATACTCAATTGCAAAATGAAAAGCTCTATCTCTATTATCTCCAAAATGGAAGAGACATGTATGTGGACCAAGAATTAGATATTAATCGTTTAAGTGATTATGATGTCGATGCCATTGTTCCACAAAGTTTCCTTAAAGACGATTCAATAGACAATAAGGTCTTAACGCGTTCTGATAAAAATCGTGGTAAATCGGATAACGTTCCAAGTGAAGAAGTAGTCAAAAAGATGAAAAACTATTGGAGACAACTTCTAAACGCCAAGTTAATCACTCAACGTAAGTTTGATAATTTAACGAAAGCTGAACGTGGAGGTTTGAGTGAACTTGATAAAGCTGGTTTTATCAAACGCCAATTGGTTGAAACTCGCCAAATCACTAAGCATGTGGCACAAATTTTGGATAGTCGCATGAATACTAAATACGATGAAAATGATAAACTTATTCGAGAGGTTAAAGTGATTACCTTAAAATCTAAATTAGTTTCTGACTTCCGAAAAGATTTCCAATTCTATAAAGTACGTGAGATTAACAATTACCATCATGCCCATGATGCGTATCTAAATGCCGTCGTTGGAACTGCTTTGATTAAGAAATATCCAAAACTTGAATCGGAGTTTGTCTATGGTGATTATAAAGTTTATGATGTTCGTAAAATGATTGCTAAGTCTGAGCAAGAAATAGGCAAAGCAACCGCAAAATATTTCTTTTACTCTAATATCATGAACTTCTTCAAAACAGAAATTACACTTGCAAATGGAGAGATTCGCAAACGCCCTCTAATCGAAACTAATGGGGAAACTGGAGAAATTGTCTGGGATAAAGGGCGAGATTTTGCCACAGTGCGCAAAGTATTGTCCATGCCCCAAGTCAATATTGTCAAGAAAACAGAAGTACAGACAGGCGGATTCTCCAAGGAGTCAATTTTACCAAAAAGAAATTCGGACAAGCTTATTGCTCGTAAAAAAGACTGGGATCCAAAAAAATATGGTGGTTTTGATAGTCCAACGGTAGCTTATTCAGTCCTAGTGGTTGCTAAGGTGGAAAAAGGGAAATCGAAGAAGTTAAAATCCGTTAAAGAGTTACTAGGGATCACAATTATGGAAAGAAGTTCCTTTGAAAAAAATCCGATTGACTTTTTAGAAGCTAAAGGATATAAGGAAGTTAAAAAAGACTTAATCATTAAACTACCTAAATATAGTCTTTTTGAGTTAGAAAACGGTCGTAAACGGATGCTGGCTAGTGCCGGAGAATTACAAAAAGGAAATGAGCTGGCTCTGCCAAGCAAATATGTGAATTTTTTATATTTAGCTAGTCATTATGAAAAGTTGAAGGGTAGTCCAGAAGATAACGAACAAAAACAATTGTTTGTGGAGCAGCATAAGCATTATTTAGATGAGATTATTGAGCAAATCAGTGAATTTTCTAAGCGTGTTATTTTAGCAGATGCCAATTTAGATAAAGTTCTTAGTGCATATAACAAACATAGAGACAAACCAATACGTGAACAAGCAGAAAATATTATTCATTTATTTACGTTGACGAATCTTGGAGCTCCCGCTGCTTTTAAATATTTTGATACAACAATTGATCGTAAACGATATACGTCTACAAAAGAAGTTTTAGATGCCACTCTTATCCATCAATCCATCACTGGTCTTTATGAAACACGCATTGATTTGAGTCAGCTAGGAGGTGACTAATAGGGGCAGCAGCCAT' ;
      
    % For real-time output
    disp(['Currently finding scars from block']) 
    block

    deletions = zeros(1,2) ;
    numberinverse = 0 ;

    for i = 1:length(reads)
        if mod(i,1000) == 0
            disp(['Currently finding scars from read'])
            i
            
        end
        scars = {'ATG' } ; % This variable will hold scars and surrounding context
        x = cell2mat(reads(i)) ;
    
        % CHECK THE CURRENT READ ORIENTATION
        if isempty(strfind(cas9,x(1:20))) == 1 % If cannot be aligned, then
             x = seqrcomplement(x) ; % Convert read to reverse complement
        end
    
        % FIND SCAR LOCATIONS WITH STRING FIND
        scarsite1 = strfind(x,'GCTAGT') ; 
        scarsite2 = strfind(x,'ACTAGC') ; 
        scarsite = [scarsite1 , scarsite2] ; % Append both types of scarsites together in one variable
        
        % ENSURE SCARS ARE NOT NEAR ENDS OF READ
        for j = 1:length(scarsite) % Grab nearby data from each of the scarsites identified
        
            if scarsite(j)-nearbyscar < 1 % Skip scarsites that are too close to start of read
                continue
            end
        
            if scarsite(j)+nearbyscar+6 > length(x) % Skip scarsites that are too close to end of read
                continue
            end
        
            
            scars = [scars ; x( (scarsite(j)-nearbyscar):(scarsite(j)+nearbyscar+6) ) ] ;  % Grab surrounding bases from scar site and append to scars
        end
        
        % MAP EACH SCAR ONTO THE DELETION MAP
        for k = 2:length(scars) % Begin at position 2 and iterate through all scars
            
            current_scar = cell2mat(scars(k)) ;
            current_scar_start = strfind(cas9, current_scar(1:nearbyscar) ) + nearbyscar ;
        
            if isempty(current_scar_start) == 1 % If can't assign a scar location then skip to next scar site
                continue
            end
            current_scar_start = current_scar_start - 39 ;
            current_scar_start = current_scar_start./3 + 1 ;
        
    
            current_scar_end = strfind(cas9, current_scar(nearbyscar+7:end) ) ;
            if isempty(current_scar_end) == 1 % If can't assign a scar location then skip to next scar site
                continue
            end
            current_scar_end = current_scar_end - 39 ;
            current_scar_end = current_scar_end./3 ;
            
            if mod(current_scar_start,1) == 0 & mod(current_scar_end,1) == 0 & current_scar_start > 0 & current_scar_end > 0 & current_scar_end > current_scar_start % Finally, both sites of scar must be integer values
                deletion_map(current_scar_start,current_scar_end) = deletion_map(current_scar_start,current_scar_end) + 1 ;
            end

            
        
        end
    
    
        clear scars
    end
    % disp(['Done finding scars'])
end

toc % Print the total time to run. One may want to adjust above parameters depending on system performance

% Note that there are two instances of the scarsites in the reference Cas9
% nucleotide sequence. Counts at these positions are thus not MISER
% deletions. Set to zero.
deletion_map(1215,1216) = 0 ;
deletion_map(1239,1240) = 0 ;


% For a quick look at resulting deletion calls, plot just the binary map
map = [ 0 0 0 ; 1 1 1 ] ;
figure
imagesc(logical(deletion_map))
colormap(map)
sum(sum(deletion_map))